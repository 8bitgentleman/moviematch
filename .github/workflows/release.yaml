# Release Process:

# 1. Update RELEASE_NOTES.markdown and bump VERSION
# 2. Create a release with the same text as VERSION plus a `v` prefix
# 3. This workflow with kick in and build a Docker image and upload binaries to the release

name: Release

on:
  push:
    tags:
      - "v2*"
  workflow_dispatch:
    inputs:
      version:
        description: The MovieMatch version to release
        required: true

jobs:
  build:
    name: compile
    runs-on: ubuntu-latest
    timeout-minutes: 60
    steps:
      - name: Clone repository
        uses: actions/checkout@v2
      - name: Install Deno
        run: |-
          curl -fsSL https://deno.land/x/install/install.sh | sh
          echo "$HOME/.deno/bin" >> $GITHUB_PATH
          export PATH="$DENO_INSTALL/bin:$PATH"
      - name: Install esbuild
        run: |
          GO111MODULE=on go get github.com/evanw/esbuild/cmd/esbuild@v0.8.54
      - name: Get metadata
        run: |
          export VERSION="${{ github.event.inputs.version || github.ref }}"
          VERSION="${VERSION#refs/tags/}"
          RELEASE_NOTES=$(deno eval -p "(await Deno.readTextFile('./RELEASE_NOTES.markdown')).match(/## ${VERSION}(?<notes>(?:.|\n)*)##/m)?.groups?.notes?.trim() ?? ''")
          echo "VERSION=${VERSION}" >> $GITHUB_ENV
          echo "RELEASE_NOTES<<EOF" >> $GITHUB_ENV
          echo "${RELEASE_NOTES}" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV
      - name: Check versions match
        run: |
          if [[ "v$(cat VERSION)" != "${{env.VERSION}}" ]]; then
            echo "Tag version is "${{env.VERSION}}", but the source code version is "$(cat VERSION)". These need to match!"
            exit 1
          fi
        shell: bash
      - name: Print
        run: |
          $HOME/go/bin/esbuild --version
          echo "${{env.VERSION}}"
          echo "${{env.RELEASE_NOTES}}"
      # - name: bundle
      #   run: ./scripts/bundle.sh
      #   shell: bash
